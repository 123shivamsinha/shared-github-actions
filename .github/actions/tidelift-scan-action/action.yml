name: Tidelift Scan
description: "Tidelift scan"

inputs:
  config-map:
      required: false
      description: "Config map"
  org-folder:
        description: Org folder name (defaults to Git org)
        default: ${{ github.repository_owner }}
  bot-rules-map:
    description: 'BOT deploymemt rules'
  bot-deploy:
    description: 'Deployment type'          
        
outputs:
  result-map:
    description: 'Result map'
    value: ${{ steps.tidelift-scan.outputs.tidelift-result-check-status }}
  tidelift-scan-result:
    value: ${{ steps.tidelift-scan.outputs.tidelift-check-result }}
    description: 'Tidelift scan result'
  tidelift-prcheck:
    description: 'Tidelift PR check block merge'
    value: ${{ steps.check-map.outputs.block-merge }}

runs:
  using: "composite"
  steps:
    - name: Run Tidelift scan
      id: tidelift-scan
      run: |
        export PATH="/usr/bin/tidelift:$PATH"
        export TIDELIFT_ALLOW_REDUNDANT_LOCKFILES=1
        export TIDELIFT_UPLOAD_MANIFESTS_ZIPPED=1
        export TIDELIFT_ALLOW_MANIFEST_FAILURES=1
        export TIDELIFT_MAVEN_IGNORE_WRAPPER=1
        if [[ -f ./build.gradle ]]; then 
          export GRADLE_HOME=/opt/gradle/latest
          export PATH=$PATH:$GRADLE_HOME/bin
        fi;
        python3 -u ${{ github.action_path }}/main.py ${{ toJson(inputs.config-map) }}
      shell: bash
      env:
        BOT_DEPLOY: ${{ inputs.bot-deploy }}
        BOT_RULES_MAP: ${{ inputs.bot-rules-map}}
      
    - name: Set artifact property
      uses: devsecops/shared-github-actions/.github/actions/artifactory-api-action@v8.29.1
      with:
        operation: set-props
        set-artifact-props: ${{ steps.tidelift-scan-action.outputs.scan-alignment }}
        config-map: ${{ inputs.config-map }}
      if: steps.tidelift-scan-action.outputs.scan-alignment != ''

    - name: Check result map
      id: check-map
      uses: devsecops/shared-github-actions/.github/actions/prcheck-utils-action@v8.29.1
      with:
        operation: check-map
        config-map: ${{ inputs.config-map }}
        result-map: ${{ steps.tidelift-scan.outputs.tidelift-result-check-status }}  
      if: |
        github.event_name == 'pull_request' &&
        !fromJson(inputs.config-map).config_artifact &&
        (inputs.org-folder == 'CDO-KP-ORG' || inputs.org-folder == 'SDS')     
        
    - name: Comment on PR
      uses: devsecops/shared-github-actions/.github/actions/github-api-action@v8.29.1
      with:
        operation: pr-comment    
        result-map: ${{ steps.check-map.outputs.result-map }}
        tidelift-prcheck: ${{ steps.check-map.outputs.block-merge }}
      env: 
        BRANCH_NAME: ${{ github.ref_name }}
      if: |
        github.event_name == 'pull_request' &&
        !fromJson(inputs.config-map).config_artifact &&
        (inputs.org-folder == 'CDO-KP-ORG' || inputs.org-folder == 'SDS')

    - name: Load to Postgres
      id: pg-build-transaction
      if: ${{ github.event_name != 'pull_request' && inputs.bot-deploy == 'true' }}
      uses: devsecops/shared-github-actions/.github/actions/rrb-pg-transactions-action@v8.29.1
      with:
        operation: postgress
        step-name: 'Tidelift'
        step-comments: ${{ steps.tidelift-scan.outputs.tidelift-check-result }}
        tidelift-comments: ${{ steps.tidelift-scan.outputs.tidelift-results-url}}
        tidelift-pct: ${{ steps.tidelift-scan.outputs.tidelift-pct }}
        app-type: ${{ fromJson(inputs.config-map).app_props.app_type }}
        deploy-env: 'Build'
        app-name: ${{ fromJson(inputs.config-map).app_props.app_name }}
        app-version: ${{ fromJson(inputs.config-map).auto_deploy_map.artifactTags.artifactReleaseVersion }}
        action: start
